name: Deploy Eureka Server to Raspberry Pi 5

on:
  push:
    branches:
      - main  # Rulează workflow-ul la fiecare push pe branch-ul principal

jobs:
  build_and_deploy:
    runs-on: [self-hosted, Linux, ARM64] # Rulează pe runner-ul configurat pe Raspberry Pi 4, utilizând toate etichetele

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'  # Adaugă această linie

      - name: Build application with Maven
        run: mvn clean package -DskipTests

      - name: Build Docker image
        run: |
          docker build -t eureka-server:latest .

      - name: Save and transfer image to Raspberry Pi 5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Salvează imaginea Docker într-un fișier .tar
          docker save eureka-server:latest -o eureka-server.tar
          
          # Transferă fișierul .tar pe Raspberry Pi 5
          scp -i ~/.ssh/id_rsa -P 15621 eureka-server.tar antonio@antonio-dev.go.ro:/home/pi/

      - name: Load image and deploy on Raspberry Pi 5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ssh -i ~/.ssh/id_rsa -p 15621 antonio@antonio-dev.go.ro "
             docker load -i /home/pi/eureka-server.tar
          "

      - name: Clean up Docker images and tar files on Raspberry Pi 4
        run: |
          docker rmi eureka-server:latest
          rm eureka-server.tar